@{
	ViewData["Title"] = "Edit Account";
}

@model AttendanceJournalLibrary.Teacher
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="background-box">
	<div class="text-center">
		<div id="title-inline"></div>
		<h2>Редактирование аккаунта</h2>
		<div id="title-inline"></div>
		@Html.HiddenFor(model => model.TeacherID)
		@Html.HiddenFor(model => model.Password)
		@Html.HiddenFor(model => model.RoleID)

		<form id="editTeacherForm">
			<label asp-for="FirstName"></label>
			<p>
				<input type="text" asp-for="FirstName" maxlength="20" placeholder="Имя" value="@Model.FirstName" />
				<span asp-validation-for="FirstName" class="position-box-error"></span>
			</p>

			<label asp-for="LastName"></label>
			<p>
				<input type="text" asp-for="LastName" maxlength="20" placeholder="Фамилия" value="@Model.LastName" />
				<span asp-validation-for="LastName" class="position-box-error"></span>
			</p>

			<label asp-for="MiddleName"></label>
			<p>
				<input type="text" asp-for="MiddleName" maxlength="20" placeholder="Отчество" value="@Model.MiddleName" />
				<span asp-validation-for="MiddleName" class="position-box-error"></span>
			</p>

			<label asp-for="Position"></label>
			<p>
				<input type="text" asp-for="Position" maxlength="20" placeholder="Должность" value="@Model.Position" />
				<span asp-validation-for="Position" class="position-box-error"></span>
			</p>

			<label asp-for="Email"></label>
			<p>
				<input type="text" asp-for="Email" maxlength="20" placeholder="Почта" />
				<span asp-validation-for="Email" class="position-box-error" id="email-error"></span>
			</p>

			<label asp-for="Login"></label>
			<p>
				<input type="text" asp-for="Login" maxlength="20" placeholder="Логин" value="@Model.Login" />
				<span asp-validation-for="Login" class="position-box-error" id="login-error"></span>
			</p>
			<p><button type="submit">Сохранить</button></p>
		</form>
		<form asp-action="Main" asp-controller="Account">
			<p><button class="button-revers">Главная</button></p>
		</form>
		@ViewData["Message"]
	</div>
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			$('#editTeacherForm').submit(function (e) {
				e.preventDefault();

				if ($(this).valid()) {
					var teacherID = $('#TeacherID').val();
					var name = $('#FirstName').val();
					var surname = $('#LastName').val();
					var middlename = $('#Middlename').val();
					var position = $('#Position').val();
					var email = $('#Email').val();
					var login = $('#Login').val();
					var password = $('#Password').val()
					var roleID = $('#RoleID').val()

					var teacher = {
						TeacherID: teacherID,
						FirstName: name,
						LastName: surname,
						MiddleName: middlename,
						Position: position,
						Email: email,
						Login: login,
						Password: password,
						RoleID: roleID
					};

					$.ajax({
						url: '/Account/EditAccount/' + teacherID,
						type: 'PUT',
						data: JSON.stringify(teacher),
						contentType: 'application/json',
						success: function (response) {
							if (response.loginError) {
								$('#login-error').text(response.loginError);
								$('#Login')[0].setCustomValidity(response.loginError);
								$('#Login').removeClass('valid');
								$('#Login').addClass('input-validation-error');
							} else if (response.emailError) {
								$('#email-error').text(response.emailError);
								$('#Email')[0].setCustomValidity(response.emailError);
								$('#Email').removeClass('valid');
								$('#Email').addClass('input-validation-error');
							} else if (response.success) {
								console.log('Пользователь успешно обновлен');
								window.location.href = '/Account/';
							} else {
								console.log('Ошибка при обновлении пользователя');
							}
						},
						error: function (xhr, status, error) {
							console.log('Ошибка при выполнении запроса');
						}
					});
				}
			});
		});
	</script>
}